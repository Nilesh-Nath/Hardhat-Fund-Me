{
  "address": "0xC0E6d7F1cA122237048f38dc6e441C1249Fa5ba3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dataPriceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "fundersToFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getterMinimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getterOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeedAddress",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xacf0c391e959685458ee9ca8dd6493ed7f278d3f61c0c99cf8eb0193c8670e23",
  "receipt": {
    "to": null,
    "from": "0x4B9F5C6cc7690110f9749c1F1Fb3d6295CF6eD21",
    "contractAddress": "0xC0E6d7F1cA122237048f38dc6e441C1249Fa5ba3",
    "transactionIndex": 25,
    "gasUsed": "890614",
    "logsBloom": "0x
    "blockHash": "0x01c9a9a4fb38c6265566a33c538e55d6423e982fd47f81b234752da9b9ed4dd6",
    "transactionHash": "0xacf0c391e959685458ee9ca8dd6493ed7f278d3f61c0c99cf8eb0193c8670e23",
    "logs": [],
    "blockNumber": 3345611,
    "cumulativeGasUsed": "6248016",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 5,
  "solcInputHash": "dd95b1cb592f54d12aa1eb5b2fee85ee",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dataPriceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundersToFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getterMinimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getterOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedAddress\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\nimport \\\"./converter.sol\\\";\\n\\ncontract FundMe {\\n    uint256 private minimumUSD = 50 * 1e18;\\n    using converter for uint256;\\n    address[] public funders;\\n    mapping(address => uint256) public fundersToFund;\\n    address private owner;\\n    AggregatorV3Interface public priceFeedAddress;\\n\\n    constructor(address dataPriceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeedAddress = AggregatorV3Interface(dataPriceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.convertPrice(priceFeedAddress) > minimumUSD,\\n            \\\"Not Paid Enough!\\\"\\n        );\\n        address funder = msg.sender;\\n        funders.push(funder);\\n        fundersToFund[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Unsuccessfull!\\\");\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            fundersToFund[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Withdraw Failed!\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(\\n            msg.sender == owner,\\n            \\\"Sorry , Only owners can withdraw Fund :( )\\\"\\n        );\\n        _;\\n    }\\n\\n    function getterOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    function getterMinimumUSD() public view returns (uint256) {\\n        return minimumUSD;\\n    }\\n}\\n\",\"keccak256\":\"0xd69f10df31a80369be804fc86b05c9a50088cfef95fa9b1d4453327ce20ab751\",\"license\":\"MIT\"},\"contracts/converter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary converter {\\n    //Library functions should be internal\\n    function getPrice(\\n        AggregatorV3Interface priceFeedAddress\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeedAddress.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function convertPrice(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeedAddress\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeedAddress);\\n        return ((ethAmount * ethPrice) / 1e18);\\n    }\\n}\\n\",\"keccak256\":\"0xc93ce4ed98d02c13645726ef5c4a9a76d66a750dc498c27959fe434268778d76\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610f4f380380610f4f833981810160405281019061003f919061012a565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610157565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f7826100cc565b9050919050565b610107816100ec565b811461011257600080fd5b50565b600081519050610124816100fe565b92915050565b6000602082840312156101405761013f6100c7565b5b600061014e84828501610115565b91505092915050565b610de9806101666000396000f3fe6080604052600436106100745760003560e01c8063b60d42881161004e578063b60d42881461010c578063cbaed7b414610116578063dc0d3dff14610141578063e0abca0b1461017e57610083565b80633ccfd60b1461008d57806372af2882146100a4578063882fdee8146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d0565b005b3480156100b057600080fd5b506100b961051c565b6040516100c69190610753565b60405180910390f35b3480156100db57600080fd5b506100f660048036038101906100f191906107d1565b610525565b6040516101039190610753565b60405180910390f35b6101146101a9565b005b34801561012257600080fd5b5061012b61053d565b604051610138919061080d565b60405180910390f35b34801561014d57600080fd5b5061016860048036038101906101639190610854565b610567565b604051610175919061080d565b60405180910390f35b34801561018a57600080fd5b506101936105a6565b6040516101a091906108e0565b60405180910390f35b6000546101e1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cc90919063ffffffff16565b11610221576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021890610958565b60405180910390fd5b60003390506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610360576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610357906109ea565b60405180910390fd5b60005b60018054905081101561040c5760006001828154811061038657610385610a0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040490610a68565b915050610363565b50600067ffffffffffffffff81111561042857610427610ab0565b5b6040519080825280602002602001820160405280156104565781602001602082028036833780820191505090505b506001908051906020019061046c929190610693565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049390610b10565b60006040518083038185875af1925050503d80600081146104d0576040519150601f19603f3d011682016040523d82523d6000602084013e6104d5565b606091505b5050905080610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051090610b71565b60405180910390fd5b50565b60008054905090565b60026020528060005260406000206000915090505481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001818154811061057757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d883610602565b9050670de0b6b3a764000081856105ef9190610b91565b6105f99190610c02565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106749190610cc0565b5050509150506402540be4008161068b9190610d3b565b915050919050565b82805482825590600052602060002090810192821561070c579160200282015b8281111561070b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b3565b5b509050610719919061071d565b5090565b5b8082111561073657600081600090555060010161071e565b5090565b6000819050919050565b61074d8161073a565b82525050565b60006020820190506107686000830184610744565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061079e82610773565b9050919050565b6107ae81610793565b81146107b957600080fd5b50565b6000813590506107cb816107a5565b92915050565b6000602082840312156107e7576107e661076e565b5b60006107f5848285016107bc565b91505092915050565b61080781610793565b82525050565b600060208201905061082260008301846107fe565b92915050565b6108318161073a565b811461083c57600080fd5b50565b60008135905061084e81610828565b92915050565b60006020828403121561086a5761086961076e565b5b60006108788482850161083f565b91505092915050565b6000819050919050565b60006108a66108a161089c84610773565b610881565b610773565b9050919050565b60006108b88261088b565b9050919050565b60006108ca826108ad565b9050919050565b6108da816108bf565b82525050565b60006020820190506108f560008301846108d1565b92915050565b600082825260208201905092915050565b7f4e6f74205061696420456e6f7567682100000000000000000000000000000000600082015250565b60006109426010836108fb565b915061094d8261090c565b602082019050919050565b6000602082019050818103600083015261097181610935565b9050919050565b7f536f727279202c204f6e6c79206f776e6572732063616e20776974686472617760008201527f2046756e64203a28202900000000000000000000000000000000000000000000602082015250565b60006109d4602a836108fb565b91506109df82610978565b604082019050919050565b60006020820190508181036000830152610a03816109c7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a738261073a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aa557610aa4610a39565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610afa600083610adf565b9150610b0582610aea565b600082019050919050565b6000610b1b82610aed565b9150819050919050565b7f5769746864726177204661696c65642100000000000000000000000000000000600082015250565b6000610b5b6010836108fb565b9150610b6682610b25565b602082019050919050565b60006020820190508181036000830152610b8a81610b4e565b9050919050565b6000610b9c8261073a565b9150610ba78361073a565b9250828202610bb58161073a565b91508282048414831517610bcc57610bcb610a39565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c0d8261073a565b9150610c188361073a565b925082610c2857610c27610bd3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c5281610c33565b8114610c5d57600080fd5b50565b600081519050610c6f81610c49565b92915050565b6000819050919050565b610c8881610c75565b8114610c9357600080fd5b50565b600081519050610ca581610c7f565b92915050565b600081519050610cba81610828565b92915050565b600080600080600060a08688031215610cdc57610cdb61076e565b5b6000610cea88828901610c60565b9550506020610cfb88828901610c96565b9450506040610d0c88828901610cab565b9350506060610d1d88828901610cab565b9250506080610d2e88828901610c60565b9150509295509295909350565b6000610d4682610c75565b9150610d5183610c75565b9250828202610d5f81610c75565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d9757610d96610a39565b5b8282058414831517610dac57610dab610a39565b5b509291505056fea2646970667358221220bcf9f8998be9f1558420bba47c76cd762cc407a1a2f726382fc53a8a008f128a64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063b60d42881161004e578063b60d42881461010c578063cbaed7b414610116578063dc0d3dff14610141578063e0abca0b1461017e57610083565b80633ccfd60b1461008d57806372af2882146100a4578063882fdee8146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d0565b005b3480156100b057600080fd5b506100b961051c565b6040516100c69190610753565b60405180910390f35b3480156100db57600080fd5b506100f660048036038101906100f191906107d1565b610525565b6040516101039190610753565b60405180910390f35b6101146101a9565b005b34801561012257600080fd5b5061012b61053d565b604051610138919061080d565b60405180910390f35b34801561014d57600080fd5b5061016860048036038101906101639190610854565b610567565b604051610175919061080d565b60405180910390f35b34801561018a57600080fd5b506101936105a6565b6040516101a091906108e0565b60405180910390f35b6000546101e1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cc90919063ffffffff16565b11610221576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021890610958565b60405180910390fd5b60003390506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610360576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610357906109ea565b60405180910390fd5b60005b60018054905081101561040c5760006001828154811061038657610385610a0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040490610a68565b915050610363565b50600067ffffffffffffffff81111561042857610427610ab0565b5b6040519080825280602002602001820160405280156104565781602001602082028036833780820191505090505b506001908051906020019061046c929190610693565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049390610b10565b60006040518083038185875af1925050503d80600081146104d0576040519150601f19603f3d011682016040523d82523d6000602084013e6104d5565b606091505b5050905080610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051090610b71565b60405180910390fd5b50565b60008054905090565b60026020528060005260406000206000915090505481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001818154811061057757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d883610602565b9050670de0b6b3a764000081856105ef9190610b91565b6105f99190610c02565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106749190610cc0565b5050509150506402540be4008161068b9190610d3b565b915050919050565b82805482825590600052602060002090810192821561070c579160200282015b8281111561070b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b3565b5b509050610719919061071d565b5090565b5b8082111561073657600081600090555060010161071e565b5090565b6000819050919050565b61074d8161073a565b82525050565b60006020820190506107686000830184610744565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061079e82610773565b9050919050565b6107ae81610793565b81146107b957600080fd5b50565b6000813590506107cb816107a5565b92915050565b6000602082840312156107e7576107e661076e565b5b60006107f5848285016107bc565b91505092915050565b61080781610793565b82525050565b600060208201905061082260008301846107fe565b92915050565b6108318161073a565b811461083c57600080fd5b50565b60008135905061084e81610828565b92915050565b60006020828403121561086a5761086961076e565b5b60006108788482850161083f565b91505092915050565b6000819050919050565b60006108a66108a161089c84610773565b610881565b610773565b9050919050565b60006108b88261088b565b9050919050565b60006108ca826108ad565b9050919050565b6108da816108bf565b82525050565b60006020820190506108f560008301846108d1565b92915050565b600082825260208201905092915050565b7f4e6f74205061696420456e6f7567682100000000000000000000000000000000600082015250565b60006109426010836108fb565b915061094d8261090c565b602082019050919050565b6000602082019050818103600083015261097181610935565b9050919050565b7f536f727279202c204f6e6c79206f776e6572732063616e20776974686472617760008201527f2046756e64203a28202900000000000000000000000000000000000000000000602082015250565b60006109d4602a836108fb565b91506109df82610978565b604082019050919050565b60006020820190508181036000830152610a03816109c7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a738261073a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aa557610aa4610a39565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610afa600083610adf565b9150610b0582610aea565b600082019050919050565b6000610b1b82610aed565b9150819050919050565b7f5769746864726177204661696c65642100000000000000000000000000000000600082015250565b6000610b5b6010836108fb565b9150610b6682610b25565b602082019050919050565b60006020820190508181036000830152610b8a81610b4e565b9050919050565b6000610b9c8261073a565b9150610ba78361073a565b9250828202610bb58161073a565b91508282048414831517610bcc57610bcb610a39565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c0d8261073a565b9150610c188361073a565b925082610c2857610c27610bd3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c5281610c33565b8114610c5d57600080fd5b50565b600081519050610c6f81610c49565b92915050565b6000819050919050565b610c8881610c75565b8114610c9357600080fd5b50565b600081519050610ca581610c7f565b92915050565b600081519050610cba81610828565b92915050565b600080600080600060a08688031215610cdc57610cdb61076e565b5b6000610cea88828901610c60565b9550506020610cfb88828901610c96565b9450506040610d0c88828901610cab565b9350506060610d1d88828901610cab565b9250506080610d2e88828901610c60565b9150509295509295909350565b6000610d4682610c75565b9150610d5183610c75565b9250828202610d5f81610c75565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d9757610d96610a39565b5b8282058414831517610dac57610dab610a39565b5b509291505056fea2646970667358221220bcf9f8998be9f1558420bba47c76cd762cc407a1a2f726382fc53a8a008f128a64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minimumUSD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "fundersToFund",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeedAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}